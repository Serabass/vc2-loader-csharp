<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>